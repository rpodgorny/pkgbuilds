#!/usr/bin/python3

import subprocess
import os
import time
import sys


user = os.environ['USER']
home = os.environ['HOME']
MAILTO = user
FN_LAST = '/tmp/systemd-check-failed-user-%s.last' % user
INTERVAL = 600


def call(cmd, print_=False):
	if print_:
		print('+ %s' % cmd)
	return subprocess.run(cmd, shell=True, stdout=subprocess.PIPE).stdout.decode().strip()


def broken_symlinks():
	x = call('find %s/.config/systemd/user -type l -print0 | xargs -r0 file | grep "broken symbolic" | sed -e "s/^\|: *broken symbolic.*$//g"' % home)
	return x


def main():
	hostname = call('uname -n')
	last = ''
	while 1:
		failed = call('systemctl --user --failed | grep failed')
		bs = broken_symlinks()
		x = '\n\n'.join([failed, bs])
		x = x.strip()
		if x and x != last:
			call('echo "%s" | mail -s "systemd user service failures on %s %s" %s' % (x, hostname, user, MAILTO), print_=True)
		elif not x and last:
			call('echo "%s" | mail -s "systemd user services ok again on %s %s" %s' % (x, hostname, user, MAILTO), print_=True)
		last = x
		time.sleep(INTERVAL)
	return 0


if __name__ == '__main__':
	sys.exit(main())
